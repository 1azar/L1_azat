package main

import (
	"fmt"
	"math"
)

// УСЛОВИЕ:
//Дана последовательность температурных колебаний: -25.4, -27.0 13.0, 19.0, 15.5, 24.5, -21.0, 32.5.
//Объединить данные значения в группы с шагом в 10 градусов. Последовательность в подмножествах не важна.
//Пример: -20:{-25.0, -27.0, -21.0}, 10:{13.0, 19.0, 15.5}, 20: {24.5}, etc.

func main() {

	temperatures := []float64{-25.4, -27.0, 13.0, 19.0, 15.5, 24.5, -21.0, 32.5}
	step := 10

	groups := make(map[int][]float64)

	for _, t := range temperatures {
		// Округляем вниз/вверх до десятков. Но тк пример говорит, что при "+" температуре для ключа N входят показания [N; N+10),
		// а при "-" температуре для ключа N входят показания (N-10; N] появляется доп условие для направления округления
		if t < 0 {
			roundedT := int(math.Ceil(t/float64(step))) * step // округляем вверх
			groups[roundedT] = append(groups[roundedT], t)     // Дополняем еще одной температурой слайс, где ключ roundedT
			continue
		}
		roundedT := int(math.Floor(t/float64(step))) * step // вниз
		groups[roundedT] = append(groups[roundedT], t)      // Дополняем еще одной температурой слайс, где ключ roundedT
	}

	fmt.Println(groups)

}
